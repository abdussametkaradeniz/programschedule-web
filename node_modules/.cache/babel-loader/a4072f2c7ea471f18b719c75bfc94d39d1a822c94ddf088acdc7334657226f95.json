{"ast":null,"code":"// array in local storage for registered users\nlet users = JSON.parse(localStorage.getItem('users')) || [];\nexport function configureFakeBackend() {\n  let realFetch = window.fetch;\n  window.fetch = function (url, opts) {\n    const {\n      method,\n      headers\n    } = opts;\n    const body = opts.body && JSON.parse(opts.body);\n    return new Promise((resolve, reject) => {\n      // wrap in timeout to simulate server api call\n      setTimeout(handleRoute, 500);\n      function handleRoute() {\n        switch (true) {\n          case url.endsWith('/customers/login') && method === 'POST':\n            return authenticate();\n          case url.endsWith('/users/register') && method === 'POST':\n            return register();\n          case url.endsWith('/users') && method === 'GET':\n            return getUsers();\n          case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\n            return deleteUser();\n          default:\n            // pass through any requests not handled above\n            return realFetch(url, opts).then(response => resolve(response)).catch(error => reject(error));\n        }\n      }\n\n      // route functions\n\n      function authenticate() {\n        const {\n          username,\n          password\n        } = body;\n        const user = users.find(x => x.username === username && x.password === password);\n        if (!user) return error('Username or password is incorrect');\n        return ok({\n          id: user.id,\n          username: user.username,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          token: 'fake-jwt-token'\n        });\n      }\n      function register() {\n        const user = body;\n        if (users.find(x => x.username === user.username)) {\n          return error(`Username  ${user.username} is already taken`);\n        }\n\n        // assign user id and a few other properties then save\n        user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\n        users.push(user);\n        localStorage.setItem('users', JSON.stringify(users));\n        return ok();\n      }\n      function getUsers() {\n        if (!isLoggedIn()) return unauthorized();\n        return ok(users);\n      }\n      function deleteUser() {\n        if (!isLoggedIn()) return unauthorized();\n        users = users.filter(x => x.id !== idFromUrl());\n        localStorage.setItem('users', JSON.stringify(users));\n        return ok();\n      }\n\n      // helper functions\n\n      function ok(body) {\n        resolve({\n          ok: true,\n          text: () => Promise.resolve(JSON.stringify(body))\n        });\n      }\n      function unauthorized() {\n        resolve({\n          status: 401,\n          text: () => Promise.resolve(JSON.stringify({\n            message: 'Unauthorized'\n          }))\n        });\n      }\n      function error(message) {\n        resolve({\n          status: 400,\n          text: () => Promise.resolve(JSON.stringify({\n            message\n          }))\n        });\n      }\n      function isLoggedIn() {\n        return headers['Authorization'] === 'Bearer fake-jwt-token';\n      }\n      function idFromUrl() {\n        const urlParts = url.split('/');\n        return parseInt(urlParts[urlParts.length - 1]);\n      }\n    });\n  };\n}","map":{"version":3,"names":["users","JSON","parse","localStorage","getItem","configureFakeBackend","realFetch","window","fetch","url","opts","method","headers","body","Promise","resolve","reject","setTimeout","handleRoute","endsWith","authenticate","register","getUsers","match","deleteUser","then","response","catch","error","username","password","user","find","x","ok","id","firstName","lastName","token","length","Math","max","map","push","setItem","stringify","isLoggedIn","unauthorized","filter","idFromUrl","text","status","message","urlParts","split","parseInt"],"sources":["C:/Users/Tringle7/Documents/PersonalWorkspace/programschedule-web/src/_helpers/fake-backend.js"],"sourcesContent":["// array in local storage for registered users\nlet users = JSON.parse(localStorage.getItem('users')) || [];\n    \nexport function configureFakeBackend() {\n    let realFetch = window.fetch;\n    window.fetch = function (url, opts) {\n        const { method, headers } = opts;\n        const body = opts.body && JSON.parse(opts.body);\n\n        return new Promise((resolve, reject) => {\n            // wrap in timeout to simulate server api call\n            setTimeout(handleRoute, 500);\n\n            function handleRoute() {\n                switch (true) {\n                    case url.endsWith('/customers/login') && method === 'POST':\n                        return authenticate();\n                    case url.endsWith('/users/register') && method === 'POST':\n                        return register();\n                    case url.endsWith('/users') && method === 'GET':\n                        return getUsers();\n                    case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\n                        return deleteUser();\n                    default:\n                        // pass through any requests not handled above\n                        return realFetch(url, opts)\n                            .then(response => resolve(response))\n                            .catch(error => reject(error));\n                }\n            }\n\n            // route functions\n\n            function authenticate() {\n                const { username, password } = body;\n                const user = users.find(x => x.username === username && x.password === password);\n                if (!user) return error('Username or password is incorrect');\n                return ok({\n                    id: user.id,\n                    username: user.username,\n                    firstName: user.firstName,\n                    lastName: user.lastName,\n                    token: 'fake-jwt-token'\n                });\n            }\n\n            function register() {\n                const user = body;\n    \n                if (users.find(x => x.username === user.username)) {\n                    return error(`Username  ${user.username} is already taken`);\n                }\n    \n                // assign user id and a few other properties then save\n                user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\n                users.push(user);\n                localStorage.setItem('users', JSON.stringify(users));\n\n                return ok();\n            }\n    \n            function getUsers() {\n                if (!isLoggedIn()) return unauthorized();\n\n                return ok(users);\n            }\n    \n            function deleteUser() {\n                if (!isLoggedIn()) return unauthorized();\n    \n                users = users.filter(x => x.id !== idFromUrl());\n                localStorage.setItem('users', JSON.stringify(users));\n                return ok();\n            }\n\n            // helper functions\n\n            function ok(body) {\n                resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(body)) });\n            }\n\n            function unauthorized() {\n                resolve({ status: 401, text: () => Promise.resolve(JSON.stringify({ message: 'Unauthorized' })) });\n            }\n\n            function error(message) {\n                resolve({ status: 400, text: () => Promise.resolve(JSON.stringify({ message })) });\n            }\n\n            function isLoggedIn() {\n                return headers['Authorization'] === 'Bearer fake-jwt-token';\n            }\n    \n            function idFromUrl() {\n                const urlParts = url.split('/');\n                return parseInt(urlParts[urlParts.length - 1]);\n            }\n        });\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}