{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tringle7\\\\Documents\\\\PersonalWorkspace\\\\programschedule-web\\\\src\\\\_components\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PrivateRoute(_ref) {\n  let {\n    component: Component,\n    roles,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => {\n      if (!localStorage.getItem('customer')) {\n        // not logged in so redirect to login page with the return url\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: '/login',\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 24\n        }, this);\n      }\n\n      // logged in so return component\n      return /*#__PURE__*/_jsxDEV(Component, {\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 20\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n_c = PrivateRoute;\nexport { PrivateRoute };\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Route","Redirect","PrivateRoute","component","Component","roles","rest","props","localStorage","getItem","pathname","state","from","location"],"sources":["C:/Users/Tringle7/Documents/PersonalWorkspace/programschedule-web/src/_components/PrivateRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nfunction PrivateRoute({ component: Component, roles, ...rest }) {\r\n    return (\r\n        <Route {...rest} render={props => {\r\n            if (!localStorage.getItem('customer')) {\r\n                // not logged in so redirect to login page with the return url\r\n                return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n            }\r\n\r\n            // logged in so return component\r\n            return <Component {...props} />\r\n        }} />\r\n    );\r\n}\r\n\r\nexport { PrivateRoute };"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC;AAEnD,SAASC,YAAY,OAA2C;EAAA,IAA1C;IAAEC,SAAS,EAAEC,SAAS;IAAEC,KAAK;IAAE,GAAGC;EAAK,CAAC;EAC1D,oBACI,QAAC,KAAK;IAAA,GAAKA,IAAI;IAAE,MAAM,EAAEC,KAAK,IAAI;MAC9B,IAAI,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,EAAE;QACnC;QACA,oBAAO,QAAC,QAAQ;UAAC,EAAE,EAAE;YAAEC,QAAQ,EAAE,QAAQ;YAAEC,KAAK,EAAE;cAAEC,IAAI,EAAEL,KAAK,CAACM;YAAS;UAAE;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG;MACpF;;MAEA;MACA,oBAAO,QAAC,SAAS;QAAA,GAAKN;MAAK;QAAA;QAAA;QAAA;MAAA,QAAI;IACnC;EAAE;IAAA;IAAA;IAAA;EAAA,QAAG;AAEb;AAAC,KAZQL,YAAY;AAcrB,SAASA,YAAY;AAAG;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}