{"ast":null,"code":"import { authHeader } from '../_helpers';\nimport axios from \"axios\";\nexport const userService = {\n  login,\n  logout,\n  register,\n  getAll,\n  getById,\n  update,\n  delete: _delete,\n  GetCustomerlogin\n};\nfunction login(Email, Password) {\n  debugger;\n  /*    const requestOptions = {\n         method: 'POST',\n         headers: { 'Content-Type': 'application/json' },\n         body: JSON.stringify({ Email, Password })\n     }; */\n\n  return axios.post(\"https://localhost:44335/api/customers/login\", {\n    Email,\n    Password\n  }).then(handleResponse).then(customer => {\n    // store user details and jwt token in local storage to keep user logged in between page refreshes\n    localStorage.setItem('token', JSON.stringify(customer.token));\n    console.log(customer);\n    return customer;\n  }).then(GetCustomerlogin(Email)).catch(error => console.log(error));\n}\nfunction GetCustomerlogin(Email) {\n  debugger;\n  /*    const requestOptions = {\n         method: 'POST',\n         headers: { 'Content-Type': 'application/json' },\n         body: JSON.stringify({ Email, Password }),\n         Authorization:localStorage.getItem(\"token\")\n     }; */\n  let url = \"https://localhost:44335/api/customers/GetCustomerByEmail\" + Email;\n  return axios.post(url).then(customer => {\n    // store user details and jwt token in local storage to keep user logged in between page refreshes\n    localStorage.setItem('customerInfo', JSON.stringify(customer));\n    console.log(customer);\n  }).catch(error => console.log(error));\n}\n_c = GetCustomerlogin;\nfunction logout() {\n  // remove user from local storage to log user out\n  localStorage.removeItem('user');\n}\nfunction getAll() {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader()\n  };\n  return fetch(\"https://localhost:44335/api/customers/GetAllCustomers\", requestOptions).then(handleResponse);\n}\nfunction getById(id) {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader()\n  };\n  return fetch(`https://localhost:44335/api/customers/GetCustomerById/${id}`, requestOptions).then(handleResponse);\n}\nfunction register(user) {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  };\n  return fetch(`https://localhost:44335/api/customers/register`, requestOptions).then(handleResponse);\n}\nfunction update(user) {\n  const requestOptions = {\n    method: 'PUT',\n    headers: {\n      ...authHeader(),\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  };\n  return fetch(`/users/${user.id}`, requestOptions).then(handleResponse);\n  ;\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n  const requestOptions = {\n    method: 'DELETE',\n    headers: authHeader()\n  };\n  return fetch(`/users/${id}`, requestOptions).then(handleResponse);\n}\nfunction handleResponse(response) {\n  return response.text().then(text => {\n    const data = text && JSON.parse(text);\n    if (!response.ok) {\n      if (response.status === 401) {\n        // auto logout if 401 response returned from api\n        logout();\n        location.reload(true);\n      }\n      const error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n    console.log(\"burası handleresponse userserviceden döndü\");\n    console.log(data);\n    return data;\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"GetCustomerlogin\");","map":{"version":3,"names":["authHeader","axios","userService","login","logout","register","getAll","getById","update","delete","_delete","GetCustomerlogin","Email","Password","post","then","handleResponse","customer","localStorage","setItem","JSON","stringify","token","console","log","catch","error","url","removeItem","requestOptions","method","headers","fetch","id","user","body","response","text","data","parse","ok","status","location","reload","message","statusText","Promise","reject"],"sources":["C:/Users/Tringle7/Documents/PersonalWorkspace/programschedule-web/src/_services/user.service.js"],"sourcesContent":["import { authHeader } from '../_helpers';\nimport axios from \"axios\";\n\nexport const userService = {\n    login,\n    logout,\n    register,\n    getAll,\n    getById,\n    update,\n    delete: _delete,\n    GetCustomerlogin,\n};\n\nfunction login(Email, Password) {\n    debugger;\n /*    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ Email, Password })\n    }; */\n\n    return axios.post(\"https://localhost:44335/api/customers/login\", { Email, Password })\n        .then(handleResponse)\n        .then(customer => {\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            localStorage.setItem('token', JSON.stringify(customer.token));\n            console.log(customer);\n            return customer;\n        })\n        .then(GetCustomerlogin(Email))\n        .catch(error => console.log(error));\n}\nfunction GetCustomerlogin(Email) {\n    debugger;\n /*    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ Email, Password }),\n        Authorization:localStorage.getItem(\"token\")\n    }; */\n    let url = \"https://localhost:44335/api/customers/GetCustomerByEmail\"+Email;\n    return axios.post(url)\n        .then(customer => {\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            localStorage.setItem('customerInfo', JSON.stringify(customer));\n            console.log(customer);\n        })\n        .catch(error => console.log(error));\n}\n\nfunction logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('user');\n}\n\nfunction getAll() {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader()\n    };\n\n    return fetch(\"https://localhost:44335/api/customers/GetAllCustomers\", requestOptions).then(handleResponse);\n}\n\nfunction getById(id) {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader()\n    };\n\n    return fetch(`https://localhost:44335/api/customers/GetCustomerById/${id}`, requestOptions).then(handleResponse);\n}\n\nfunction register(user) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(user)\n    };\n\n    return fetch(`https://localhost:44335/api/customers/register`, requestOptions).then(handleResponse);\n}\n\nfunction update(user) {\n    const requestOptions = {\n        method: 'PUT',\n        headers: { ...authHeader(), 'Content-Type': 'application/json' },\n        body: JSON.stringify(user)\n    };\n\n    return fetch(`/users/${user.id}`, requestOptions).then(handleResponse);;\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    const requestOptions = {\n        method: 'DELETE',\n        headers: authHeader()\n    };\n\n    return fetch(`/users/${id}`, requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if (response.status === 401) {\n                // auto logout if 401 response returned from api\n                logout();\n                location.reload(true);\n            }\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n        console.log(\"burası handleresponse userserviceden döndü\");\n        console.log(data);\n        return data;\n    });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}